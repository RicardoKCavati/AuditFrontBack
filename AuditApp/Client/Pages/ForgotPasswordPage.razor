@page "/troca_senha"
@inject IJSRuntime JsRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Troca de Senha</h3>
<div>
    <label for="email">E-mail</label>
    <input id="email" @bind-value="_email" type="email" placeholder="Por favor insira o e-mail do seu cadastro" />
    <button @onclick="CallChangePassword" type="submit" class="btn btn-primary ">Solicitar troca de senha</button>
</div>

@code {
    private string _email = string.Empty;

    private async Task CallChangePassword()
    {
        try
        {
            if (string.IsNullOrEmpty(_email))
            {
                await JsRuntime.InvokeVoidAsync("alert", "Por favor preencha o e-mail!");
                return;
            }

            var response = await Http.PostAsJsonAsync("password/SendResetPasswordCode", _email);

            if (response.IsSuccessStatusCode)
            {
                var base64Email = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(_email));
                NavigationManager.NavigateTo($"/validar_codigo/{base64Email}");
                return;
            }

            await JsRuntime.InvokeVoidAsync("alert", await response.Content.ReadAsStringAsync());
        }
        catch (Exception e)
        {
            await JsRuntime.InvokeVoidAsync("alert", e.Message);
        }
    }
}
